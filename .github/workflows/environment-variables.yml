name: Variables across jobs.
on: [ push, pull_request ]
env:
  BUILD_INFO: "Build information not set."
jobs:
  setup_variables:
    ## Setup variables for build info.
    name: Setup environment variables.
    runs-on: ubuntu-latest
    outputs:
      build_name: ${{ steps.set_vars.outputs.build_name }}
      branch_name: ${{ steps.set_vars.outputs.branch_name }}
      commit_hash: ${{ steps.set_vars.outputs.commit_hash }}
      repo_owner: ${{ steps.set_vars.outputs.repo_owner }}
      repo_name: ${{ steps.set_vars.outputs.repo_name }}

    steps:
      - name: Set Variables
        id: set_vars
        run: |
          ## PUSH
          if [ "${{ github.event_name }}" == "push" ]; then
            BUILD_NAME=$(sed -E 's/refs\/(heads|tags)\///; s/\//__/g;' <<< $GITHUB_REF)
            BRANCH_NAME=$(sed -E 's/refs\/(heads|tags)\///;' <<< $GITHUB_REF)
            COMMIT_HASH=$(echo "${GITHUB_SHA}")
          ## PULL_REQUEST
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            BUILD_NAME=$(echo "pr-${{ github.event.pull_request.number }}")
            BRANCH_NAME=$(echo "pr-${{ github.event.pull_request.number }}")
            COMMIT_HASH=$(echo "${{ github.event.pull_request.head.sha }}")
          else
            ## ERROR
            exit 1
          fi
          ## For step checks and artifact deployment path.
          ## Same for push and PR
          export REPO_FULL=${{ github.repository }}
          export REPO_RE='([^/]+)/(.*)'
          [[ "$REPO_FULL" =~ $REPO_RE ]]
          REPO_OWNER=$(echo "${BASH_REMATCH[1]}")
          REPO_NAME=$(echo "${BASH_REMATCH[2]}")
          ## Set step outputs for later use
          echo ::set-output name=build_name::${BUILD_NAME}
          echo ::set-output name=branch_name::${BRANCH_NAME}
          echo ::set-output name=commit_hash::${COMMIT_HASH}
          echo ::set-output name=repo_owner::${REPO_OWNER}
          echo ::set-output name=repo_name::${REPO_NAME}

  consume_variables:
    name: Consume environment variables.
    needs: setup_variables
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Create Build Information
        env:
        #  BUILD_INFO: ${{ toJson( steps.set_vars.outputs ) }}
        #  VARIABLE_BLOB: ${{ toJson( needs.setup_variables.outputs.steps.set_vars.output ) }}
          VARIABLE_BLOB: ${{ toJson( needs.setup_variables.outputs ) }}
          BUILD_INFO: ${{ toJson( needs.setup_variables.outputs ) }}
        run: |
          echo "$BUILD_INFO"
          echo $BUILD_INFO > ./build/build-info.json

      ## Upload the test results artifact
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: output-file
          path: build
